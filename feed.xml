<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jiwon K. Kim's Blog</title>
    <description>개인적으로 공부한 것들을 정리하기 위해 만든 Github 블로그입니다</description>
    <link>https://jiwonkkim.github.io/</link>
    <atom:link href="https://jiwonkkim.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 02 Jan 2021 02:47:36 +0900</pubDate>
    <lastBuildDate>Sat, 02 Jan 2021 02:47:36 +0900</lastBuildDate>
    <generator>Jekyll v4.2.0</generator>
    
      <item>
        <title>1208. [S/W 문제해결 기본] 1일차 - Flatten</title>
        <description>&lt;h4 id=&quot;sw-expert-academy-문제&quot;&gt;SW Expert Academy 문제&lt;/h4&gt;
&lt;h5 id=&quot;1208-sw-문제해결-기본-1일차---flatten&quot;&gt;&lt;a href=&quot;https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV139KOaABgCFAYh&quot;&gt;1208. [S/W 문제해결 기본] 1일차 - Flatten&lt;/a&gt;&lt;/h5&gt;

&lt;p&gt;한 쪽 벽면에 다음과 같이 노란색 상자들이 쌓여 있다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;높은 곳의 상자를 낮은 곳에 옮기는 방식으로 최고점과 최저점의 간격을 줄이는 작업을 평탄화라고 한다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;평탄화를 모두 수행하고 나면, 가장 높은 곳과 가장 낮은 곳의 차이가 최대 1 이내가 된다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;평탄화 작업을 위해서 상자를 옮기는 작업 횟수에 제한이 걸려있을 때, 제한된 횟수만큼 옮기는 작업을 한 후 최고점과 최저점의 차이를 반환하는 프로그램을 작성하시오.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;문제에 대한 자세한 설명은 출처를 참조&lt;/em&gt;&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[제약 사항]&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;가로 길이는 항상 100으로 주어진다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;모든 위치에서 상자의 높이는 1이상 100이하로 주어진다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;덤프 횟수는 1이상 1000이하로 주어진다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;주어진 덤프 횟수 이내에 평탄화가 완료되면 더 이상 덤프를 수행할 수 없으므로 그 때의 최고점과 최저점의 높이 차를 반환한다 (주어진 data에 따라 0 또는 1이 된다).&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[입력]&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;총 10개의 테스트 케이스가 주어지며, 각 테스트 케이스의 첫 번째 줄에는 덤프 횟수가 주어진다. 그리고 다음 줄에 각 상자의 높이값이 주어진다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[출력]&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;#부호와 함께 테스트 케이스의 번호를 출력하고, 공백 문자 후 테스트 케이스의 최고점과 최저점의 높이 차를 출력한다.&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
#include &amp;lt;stdio.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define TEST_CASE 10
#define WIDTH 100
#define MAX_HEIGHT 100
#define MAX_DIFF 1
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    
&lt;span class=&quot;cp&quot;&gt;#ifdef USE_FREOPEN
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;freopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;input.txt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;r&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stdin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#endif
&lt;/span&gt;    
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test_case&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test_case&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test_case&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TEST_CASE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test_case&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;// ** dumping count&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;heights&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAX_HEIGHT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ** the number of boxes having that height&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;diff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;// ** difference of the tallest block and the shortest block&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boxes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;min_height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MAX_HEIGHT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max_height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WIDTH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boxes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;heights&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;boxes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;boxes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max_height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;max_height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boxes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;boxes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;min_height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;min_height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boxes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dump&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dump&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;heights&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min_height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;min_height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;heights&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max_height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;max_height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            
            &lt;span class=&quot;n&quot;&gt;heights&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min_height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;heights&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min_height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            
            &lt;span class=&quot;n&quot;&gt;heights&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max_height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;heights&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max_height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        
        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;heights&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min_height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;min_height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;heights&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max_height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;max_height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        
        &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max_height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;min_height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;#&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test_case&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;출처&quot;&gt;출처:&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV139KOaABgCFAYh&quot;&gt;SW Expert Academy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 02 Jan 2021 00:00:00 +0900</pubDate>
        <link>https://jiwonkkim.github.io/algorithm/2021/01/02/sw_academy_1208/</link>
        <guid isPermaLink="true">https://jiwonkkim.github.io/algorithm/2021/01/02/sw_academy_1208/</guid>
        
        <category>Algorithm</category>
        
        <category>SW Expert Academy</category>
        
        
        <category>Algorithm</category>
        
      </item>
    
      <item>
        <title>1206. [S/W 문제해결 기본] 1일차 - View</title>
        <description>&lt;h4 id=&quot;sw-expert-academy-문제&quot;&gt;SW Expert Academy 문제&lt;/h4&gt;
&lt;h5 id=&quot;1206-sw-문제해결-기본-1일차---view&quot;&gt;&lt;a href=&quot;https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV134DPqAA8CFAYh&amp;amp;categoryId=AV134DPqAA8CFAYh&amp;amp;categoryType=CODE&quot;&gt;1206. [S/W 문제해결 기본] 1일차 - View&lt;/a&gt;&lt;/h5&gt;

&lt;p&gt;강변에 빌딩들이 옆으로 빽빽하게 밀집한 지역이 있다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이곳에서는 빌딩들이 너무 좌우로 밀집하여, 강에 대한 조망은 모든 세대에서 좋지만 왼쪽 또는 오른쪽 창문을 열었을 때 바로 앞에 옆 건물이 보이는 경우가 허다하였다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그래서 이 지역에서는 왼쪽과 오른쪽으로 창문을 열었을 때, 양쪽 모두 거리 2 이상의 공간이 확보될 때 조망권이 확보된다고 말한다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;빌딩들에 대한 정보가 주어질 때, 조망권이 확보된 세대의 수를 반환하는 프로그램을 작성하시오.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;아래와 같이 강변에 8채의 빌딩이 있을 때, 연두색으로 색칠된 여섯 세대에서는 좌우로 2칸 이상의 공백이 존재하므로 조망권이 확보된다. 따라서 답은 6이 된다.&lt;br /&gt;&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;/assets/algorithm/03_views/Fig01_views.png&quot; width=&quot;500&quot; height=&quot;400&quot; /&gt;&lt;/center&gt;

&lt;p&gt;A와 B로 표시된 세대의 경우는 왼쪽 조망은 2칸 이상 확보가 되었지만 오른쪽 조망은 한 칸 밖에 확보가 되지 않으므로 조망권을 확보하지 못하였다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;C의 경우는 반대로 오른쪽 조망은 2칸이 확보가 되었지만 왼쪽 조망이 한 칸 밖에 확보되지 않았다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[제약 사항]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;가로 길이는 항상 1000이하로 주어진다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;맨 왼쪽 두 칸과 맨 오른쪽 두 칸에는 건물이 지어지지 않는다. (예시에서 빨간색 땅 부분)&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;각 빌딩의 높이는 최대 255이다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[입력]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;입력 파일의 첫 번째 줄에는 테스트케이스의 길이가 주어진다. 그 바로 다음 줄에 테스트 케이스가 주어진다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;총 10개의 테스트케이스가 주어진다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[출력]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;#부호와 함께 테스트 케이스의 번호를 출력하고, 공백 문자 후 테스트 케이스의 조망권이 확보된 세대의 수를 출력한다.&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
#include &amp;lt;stdio.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define TEST_CASE 10
#define DISTANCE 2
#define MAX_HEIGHT 255
#define LEFT -1
#define RIGHT 1
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;search_views&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    
&lt;span class=&quot;cp&quot;&gt;#ifdef USE_FREOPEN
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;freopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;input.txt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;r&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stdin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#endif
&lt;/span&gt;    
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test_case&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test_case&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test_case&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TEST_CASE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test_case&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;left_views&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;right_views&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;views&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total_views&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buildings&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buildings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// search left &amp;amp; search right&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// and get the minimum value&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;center&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;center&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;center&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DISTANCE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;views&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;search_views&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buildings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RIGHT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;center&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DISTANCE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;views&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;search_views&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buildings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LEFT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;left_views&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;search_views&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buildings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LEFT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;right_views&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;search_views&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buildings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RIGHT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;views&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;left_views&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;right_views&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;right_views&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;left_views&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;total_views&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;views&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        
        &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;#&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test_case&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total_views&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;k&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buildings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;search_views&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;min_views&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAX_HEIGHT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;views&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dist&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dist&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DISTANCE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dist&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;views&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;center&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;views&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min_views&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;views&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;min_views&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;views&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;min_views&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;출처&quot;&gt;출처:&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV134DPqAA8CFAYh&amp;amp;categoryId=AV134DPqAA8CFAYh&amp;amp;categoryType=CODE&quot;&gt;SW Expert Academy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 02 Jan 2021 00:00:00 +0900</pubDate>
        <link>https://jiwonkkim.github.io/algorithm/2021/01/02/sw_academy_1206/</link>
        <guid isPermaLink="true">https://jiwonkkim.github.io/algorithm/2021/01/02/sw_academy_1206/</guid>
        
        <category>Algorithm</category>
        
        <category>SW Expert Academy</category>
        
        
        <category>Algorithm</category>
        
      </item>
    
      <item>
        <title>1204. [S/W 문제해결 기본] 1일차 - 최빈수 구하기</title>
        <description>&lt;h4 id=&quot;sw-expert-academy-문제&quot;&gt;SW Expert Academy 문제&lt;/h4&gt;
&lt;h5 id=&quot;1204-sw-문제해결-기본-1일차---최빈수-구하기&quot;&gt;&lt;a href=&quot;https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV13zo1KAAACFAYh&quot;&gt;1204. [S/W 문제해결 기본] 1일차 - 최빈수 구하기&lt;/a&gt;&lt;/h5&gt;

&lt;p&gt;어느 고등학교에서 실시한 1000명의 수학 성적을 토대로 통계 자료를 만들려고 한다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이때, 이 학교에서는 최빈수를 이용하여 학생들의 평균 수준을 짐작하는데, 여기서 최빈수는 특정 자료에서 가장 여러 번 나타나는 값을 의미한다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;다음과 같은 수 분포가 있으면,&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;10, 8, 7, 2, 2, 4, 8, 8, 8, 9, 5, 5, 3&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;최빈수는 8이 된다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;최빈수를 출력하는 프로그램을 작성하여라 (단, 최빈수가 여러 개 일 때에는 가장 큰 점수를 출력하라).&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[제약 사항]&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;학생의 수는 1000명이며, 각 학생의 점수는 0점 이상 100점 이하의 값이다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[입력]&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;첫 번째 줄에 테스트 케이스의 수 T가 주어진다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;각 테스트 케이스의 첫 줄에는 테스트 케이스의 번호가 주어지고 그 다음 줄부터는 점수가 주어진다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[출력]&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;#부호와 함께 테스트 케이스의 번호를 출력하고, 공백 문자 후 테스트 케이스에 대한 답을 출력한다.&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include&amp;lt;iostream&amp;gt;
#include &amp;lt;cstdio&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define NUM_STUDENT 1000
#define MAX_SCORE 100
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test_case&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
    
    &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test_case&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test_case&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test_case&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;   
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test_num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scores&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAX_SCORE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;score&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;score_freq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test_num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NUM_STUDENT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;score&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;scores&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;score&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;score&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;score_freq&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MAX_SCORE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;score_freq&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scores&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;score&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;score_freq&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scores&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;#&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test_num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;score&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;출처&quot;&gt;출처:&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV13zo1KAAACFAYh&quot;&gt;SW Expert Academy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 01 Jan 2021 00:00:00 +0900</pubDate>
        <link>https://jiwonkkim.github.io/algorithm/2021/01/01/sw_academy_1204/</link>
        <guid isPermaLink="true">https://jiwonkkim.github.io/algorithm/2021/01/01/sw_academy_1204/</guid>
        
        <category>Algorithm</category>
        
        <category>SW Expert Academy</category>
        
        
        <category>Algorithm</category>
        
      </item>
    
      <item>
        <title>Algorithm 포스팅을 시작하기 전에...</title>
        <description>&lt;h4 id=&quot;algorithm-포스팅을-시작하기-전에&quot;&gt;Algorithm 포스팅을 시작하기 전에…&lt;/h4&gt;
&lt;p&gt;학부 때 알고리즘 공부를 해본 적이 거의 없었다. 그리고 C++ 또한 접하지 못했다. 그런데 본인이 직무를 하드웨어에서 소프트웨어로 변경하다보니, 이후 회사에 입사하기 위한 코딩테스트가 상당히 마음에 걸리게 되었다. 그런 의미에서 오랜만에 SW Expert Academy에 올라와 있는 문제들을 풀고자 하였으나… 역시 내 실력으론 아직 어려웠다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그래서.. 쇠뿔도 단김에 빼라고, SW Expert Academy 홈페이지에 올라와있는 기초 of 기초부터 시작해보기로 했다. (이러면 포스팅도 많이 하고, 금방 하겠지? 플래그가 되지 않았으면 좋겠다.)&lt;br /&gt;&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;/assets/algorithm/01_before_start/Fig01_sw_academy.png&quot; width=&quot;600&quot; height=&quot;400&quot; /&gt;&lt;/center&gt;

&lt;p&gt;그림에 나와있는 과정을 (가능한) 빨리 이수할 예정이다. 동영상 강의도 있다. 조금 피곤하다. 그래도 열심히 해보며, 너무 기초적인 내용을 제외하고 포스팅을 하도록 하겠다. 단, C++은 내가 접해본 적이 없기 때문에 이와 관련된 내용은 포스팅할 예정이다.&lt;/p&gt;

&lt;hr /&gt;
&lt;h5 id=&quot;후기&quot;&gt;후기&lt;/h5&gt;
&lt;p&gt;위에서 언급한 과정을 잠깐 봤는데.. 코딩에 문외한인 사람들이 봐야하는 기초내용인것 같다. 그래서 과정을 생략하고 홈페이지에 나와있는 LEARN 탭의 Programming Beginner 과정부터 올라와있는 문제부터 차근차근 풀어볼 예정이다.&lt;/p&gt;

&lt;h5 id=&quot;출처&quot;&gt;출처:&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://swexpertacademy.com/main/help/clause/learningGuide.do&quot;&gt;SW Expert Academy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 31 Dec 2020 00:00:00 +0900</pubDate>
        <link>https://jiwonkkim.github.io/algorithm/2020/12/31/before_start/</link>
        <guid isPermaLink="true">https://jiwonkkim.github.io/algorithm/2020/12/31/before_start/</guid>
        
        <category>Algorithm</category>
        
        <category>SW Expert Academy</category>
        
        
        <category>Algorithm</category>
        
      </item>
    
      <item>
        <title>가우시안 혼합 모델 (Gaussian Mixture Model)</title>
        <description>&lt;p&gt;&lt;br /&gt;&lt;br /&gt;
&lt;strong&gt;이 글을 읽기 전에&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;해당 포스팅은 개인적인 지식, 구글링 검색 결과 등을 정리/각색하였습니다.&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;해당 포스팅은 개인적으로 공부한 내용을 정리한 것으로, 일부 내용에 오류가 있을 수 있습니다.&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;포스팅에 오류가 있을 시, 댓글로 남겨주시면 감사하겠습니다.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;기계학습을 공부하다 보면 모델/모델링 이라는 단어가 자주 등장합니다. 오늘 우리가 다룰 가우시안 혼합 모델(GMM)에서도 등장하지요. 그렇다면 이 모델링이란 무엇일까요?&lt;br /&gt;
&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%88%98%ED%95%99%EC%A0%81_%EB%AA%A8%EB%8D%B8&quot;&gt;위키피디아&lt;/a&gt;에서 발췌한 내용에 따르면 다음과 같습니다.&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;A mathematical model is a description of a system using mathematical concepts and language.&lt;br /&gt;
수학적 개념과 언어를 사용한 시스템의 서술이다.&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;
음.. 다소 난해합니다. 저것만으로는 이해하기가 어려워서 제가 자주 애용하는 &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=2&amp;amp;m_temp1=587&amp;amp;id=736&quot;&gt;정보통신기술용어해설&lt;/a&gt; 홈페이지를 뒤져봤습니다.&lt;br /&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;모델, 모델링 (Modelling) 이란?&lt;/li&gt;
  &lt;ul&gt;
    &lt;li&gt;일반적으로, 모두에게 공통적으로 이해되도록 약속된 방식(수식,그림 등)으로 표현하는 것&lt;/li&gt;
    &lt;ul&gt;
      &lt;li&gt;복잡한 현실세계를 단순화(추상화) 즉, '추상적 체계적으로 표현하는 작업 또는 방법'&lt;/li&gt;
    &lt;/ul&gt;
    &lt;li&gt;공학적으로는, 시스템(체계)적인 특성을 '수학적으로 표현하는 과정(수식화)'&lt;/li&gt;  
    &lt;ul&gt;
      &lt;li&gt;정량적으로 표현되도록 수학적 언어로 전환시키는 과정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/ul&gt;

  &lt;li&gt;정보 시스템 모델링&lt;/li&gt;
  &lt;ul&gt;
    &lt;li&gt;정보 모델링&lt;/li&gt;
    &lt;ul&gt;
      &lt;li&gt;현실세계를 인간이 이해할 수 있는 정보 형태/구조로 변환하는 과정&lt;/li&gt;
    &lt;/ul&gt;
    &lt;li&gt;데이터 모델링&lt;/li&gt;  
    &lt;ul&gt;
      &lt;li&gt;현실세계의 복잡한 데이터들을 컴퓨터 정보 구조로 변환시키는 과정&lt;/li&gt;
    &lt;/ul&gt;
    &lt;li&gt;프로세스 모델링&lt;/li&gt;  
    &lt;ul&gt;
      &lt;li&gt;업무활동 등과 관련된 객체를 대상으로 함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/ul&gt;

  &lt;li&gt;수학적 모델링&lt;/li&gt;
  &lt;ul&gt;
    &lt;li&gt;시스템의 거동(변화)을 나타내는(예측하는) 수학적 모델이 방정식으로써 표현됨&lt;/li&gt;
    &lt;ul&gt;
      &lt;li&gt;공학에서 다루는 시스템 대부분이 미분방정식으로 수식화시켜 수학적 모델링을 함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/ul&gt;

  &lt;li&gt;확률 모델링 / 통계 모델링&lt;/li&gt;
  &lt;ul&gt;
    &lt;li&gt;확률적 현상에 대한 확률적 모형화&lt;/li&gt;
    &lt;ul&gt;
      &lt;li&gt;가능한 발생 확률 형태를 챠트, 표, 수식, 확률함수 등으로 표현 가능&lt;/li&gt;
    &lt;/ul&gt;
    &lt;li&gt;주어진 문제가 확률적 현상을 반영할 때, 이를 수리 모형화하는 경우&lt;/li&gt;  
    &lt;ul&gt;
      &lt;li&gt;例) 네트워크 모델, 의사결정론, 마르코프 과정, 대기행렬 모델, 시뮬레이션 모델 등&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/ul&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;
이제야 다소 이해가 됩니다. 결론적으로 모델이란, 어떤 현상을 수학적으로 표현하는 것이라고 생각하면 될 것 같습니다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;여기서 또 간단하게 가우시안 분포와 관련된 용어들을 위키피디아를 통해 정리해보았습니다.&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
  확률 변수(Random Variable): 확률적인 과정에 따라 값이 결정되는 변수
  &lt;/li&gt;
  &lt;li&gt;
  확률 분포(Probability Distribution): 확률 변수가 특정한 값을 가질 확률을 나타내는 함수
  &lt;/li&gt;
  &lt;li&gt;
  가우시안 분포(Gaussian Distribution): 연속 확률 분포의 하나. 정규 분포(Normal Distribution)라고도 불림.
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;예전부터 이 가우시안 분포처럼 이상적인 형태의 분포가 이 세상에 존재할까에 대한 개인적인 의구심이 항상 들었습니다.&lt;br /&gt;
이에 대한 결론부터 말하자면 ‘있다’ 입니다.&lt;br /&gt;
세상에는 다양한 데이터가 존재하고, 그 데이터는 각각 다양한 형태의 분포를 가지고 있습니다. 자연현상에서 관측되는 데이터들이 대체로 가우시안 분포의 형태를 보인다고 합니다. 예를 들면, 사람의 키/몸무게나 동전 던지기와 같은 데이터가 그렇습니다. 물론 완벽한 가우시안 분포는 아니겠지만요. &lt;strong&gt;즉, 데이터는 각각의 의미는 알 수 없지만, 만약 어떤 분포를 따른다고 한다면 이는 분포를 통해 다른 현상들을 해석하거나 예측할 수 있게 되는 것입니다.&lt;/strong&gt; 그리고 이러한 데이터를 표현하기 위한 수단이 바로 모델링입니다.&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;/assets/pas/01_gmm/Fig01_Height.png&quot; width=&quot;500&quot; height=&quot;300&quot; /&gt;&lt;/center&gt;
&lt;center&gt;&lt;a href=&quot;https://www.usablestats.com/lessons/normal&quot;&gt;Fig. 1. Height Distribution of Men and Women&lt;/a&gt;&lt;/center&gt;
&lt;center&gt;남자와 여자의 키 분포가 이상적인 가우시안 분포의 형태와 비슷하게 나타내지는 것을 볼 수 있다.&lt;/center&gt;

&lt;p&gt;그럼 오늘의 포스팅 주제인 GMM에 대하여 알아보도록 하겠습니다.&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;군집화clustering&quot;&gt;군집화(Clustering)&lt;/h2&gt;

&lt;p&gt;GMM은 주로 &lt;strong&gt;군집화(Clustering)&lt;/strong&gt;을 위해 사용됩니다. 군집화란, 어떤 특정 데이터셋에서 같은 특성(Feature)을 공유하는 클러스터(통계 조사의 대상 범위(모집단)의 요소를 몇 개 모은 단위체)를 찾는 &lt;strong&gt;비지도학습(Will be posted later)&lt;/strong&gt; 문제입니다.&lt;/p&gt;
&lt;center&gt;&lt;img src=&quot;/assets/pas/01_gmm/Fig02_Cluster.png&quot; width=&quot;350&quot; height=&quot;300&quot; /&gt;&lt;/center&gt;
&lt;center&gt;Fig. 2. Clustering the data with 2 clusters&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;
예를 들면, Fig. 2와 같은 데이터가 주어졌고, 이를 두 개의 클러스터로 분류한다면, $\mu_{1}$와 $\mu_{2}$를 중심으로 군집화 할 수 있습니다. 대표적인 군집화 알고리즘으로는 &lt;strong&gt;K-means 군집화(Will be posted later)&lt;/strong&gt;가 있습니다. K-means 군집화는 하나의 데이터를 하나의 클러스터에만 연결하지만, 이 하나의 데이터가 다른 클러스터와는 얼마나 연관성이 있는지 알 수 없다는 단점이 있습니다. 이러한 군집화 방식을 Hard Clustering이라고 합니다. GMM은 Hard Clustering과 달리, 하나의 데이터가 클러스터들과 얼마나 연관성이 있는지 알 수 있는 Soft Clustering 방식을 사용합니다.&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;gmm의-정의&quot;&gt;GMM의 정의&lt;/h2&gt;

&lt;p&gt;GMM은 $k\in\{ 1, \cdots, K \}$로 정의되는 가우시안 함수로 구성된 함수입니다. 여기서 $K$는 데이터셋에서의 클러스터 개수입니다. 혼합 모델에서 사용되는 각각의 가우시안 함수 $k$는 다음과 같은 매개변수들로 구성됩니다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;가우시안 함수의 중심부를 의미하는 평균값 $\mu$&lt;/li&gt;
  &lt;li&gt;가우시안 함수의 너비를 의미하는 공분산 $\Sigma$ (공분산은 다른 함수와의 상관정도 라고 생각하시면 되겠습니다.)&lt;/li&gt;
  &lt;li&gt;가우시안 함수의 크기를 의미하는 혼합 계수 $\pi$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br /&gt;
그림을 보시면 좀 더 이해가 쉬우실겁니다.
&lt;br /&gt;&lt;/p&gt;
&lt;center&gt;&lt;img src=&quot;/assets/pas/01_gmm/Fig03_GMM.png&quot; width=&quot;500&quot; height=&quot;300&quot; /&gt;&lt;/center&gt;
&lt;center&gt;Fig. 3. GMM with $K=3$&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;혼합 계수 $\pi$는 데이터가 해당 클러스터에 포함된 사전 확률이기 때문에, 다음과 같은 식을 만족해야 합니다.&lt;/p&gt;
&lt;p&gt;$$\sum_{k=1}^K \pi_{k}=1\tag{1}$$&lt;/p&gt;

&lt;p&gt;우리의 목적은 주어진 데이터의 각 클러스터가 가우시안 분포를 가진다는 가정하에서 GMM을 모델링하는 것입니다. 따라서 우리는 GMM이 최대한 주어진 데이터의 분포와 유사해지도록 위에서 언급된 GMM의 매개변수들을 조정해야 합니다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;가우시안 함수의 식은 다음과 같습니다.&lt;/p&gt;
&lt;p&gt;$$\mathcal{N}(\boldsymbol{x}|\mu,\Sigma)=\frac{1}{(2\pi)^\frac{D}{2}|\Sigma|^\frac{1}{2}}exp(-\frac{1}{2}(\boldsymbol{x}-\mu)^{T}\Sigma^{-1}(\boldsymbol{x}-\mu))\tag{2}$$&lt;/p&gt;
&lt;p&gt;여기서 $\boldsymbol{x}$는 우리의 데이터를 나타내고, $D$는 데이터의 차원 수를 나타냅니다. 만약 우리가 1000개의 데이터, 그리고 그 데이터가 3차원으로 이루어져 있다면 $\boldsymbol{x}$는 $1000{\times}3$, $\mu$는 $1{\times}3$, $\Sigma$는 $3{\times}3$으로 구성된 행렬이 됩니다.&lt;br /&gt;
매개변수를 조금 더 편하게 구하기 위해 (2)의 식에 양변에 로그를 취하면, 하단의 (3)과 같은 식이 됩니다.&lt;/p&gt;
&lt;p&gt;$$\log{\mathcal{N}(\boldsymbol{x}|\mu,\Sigma)}=-\frac{D}{2}\log{2\pi}-\frac{1}{2}\log{\Sigma}-\frac{1}{2}(\boldsymbol{x}-\mu)^{T}\Sigma^{-1}(\boldsymbol{x}-\mu)\tag{3}$$&lt;/p&gt;

&lt;p&gt;(2)의 식을 각각 $\mu$와 $\Sigma$로 편미분하고, 그 식이 0이 되는 해를 구하면 가장 최적의 매개변수를 구할 수 있습니다. 이렇게 해는 최대우도추정(Maximum Likelihood Estimation)(&lt;strong&gt;Will be posted later&lt;/strong&gt;)로 구한 해와 같습니다.&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;잠재변수latent-variable&quot;&gt;잠재변수(Latent Variable)&lt;/h2&gt;

&lt;p&gt;이제 (3)의 식을 미분하여 그 해를 구하면 되지만, 우리는 한 개의 가우시안 함수가 아님 여러 개의 가우시안 함수가 혼합된 GMM을 모델링해야하기 때문에 이를 모두 수행하려면 계산이 복잡해집니다. 따라서 &lt;strong&gt;잠재변수(Latent Variable)&lt;/strong&gt;이라는 개념을 식에 도입합니다. 잠재변수란, 직접적으로 관찰/측정이 되지 않는 변수입니다. 이로 인해 다른 변수를 통해서 간접적으로만 측정이 가능한 변수입니다. 즉, 구체적으로 측정되는 변수에 숨어서 어떤 현상에 미치는 요인으로 작용하는 변수를 의미합니다. 예를 들면, 시험 합격 = 머리 + 노력 + 운 에서 우항을 잠재변수로 볼 수 있겠네요.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;먼저, 어떤 한 개의 데이터 $\boldsymbol{x}_{n}$가 $k$라는 가우시안 함수의 구성 성분일 확률을 구해봅시다. 이것을 식으로 표현하면 다음과 같습니다.&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;$$p(z_{nk}=1|\boldsymbol{x}_{n})\tag{4}$$&lt;/p&gt;

&lt;p&gt;여기서 $z_{nk}$는 두 가지의 경우의 수만 갖습니다. $\boldsymbol{x}_{n}$가 $k$라는 가우시안 함수에 포함되거나, 아니거나. 물론 잠재변수의 개념상 잠재변수 $z$가 무엇인지 정확하게 알 수 없을테지만, 이것을 알아내야 GMM의 매개변수를 구할 수 있습니다.&lt;br /&gt;
따라서, 잠재변수 $z$를 가우시안 함수의 크기를 의미하는 매개변수 $\pi$와 연관짓는 식을 다음과 같이 만듭니다.&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;$$\pi_{k}=p(z_{k}=1), \boldsymbol{z}=\{ z_{1}, \cdots, z_{K} \}\tag{5}$$&lt;/p&gt;

&lt;p&gt;즉, 어떤 한 개의 데이터가 $k$라는 가우시안 함수의 구성 성분일 확률과 가우시안 함수의 크기를 의미하는 혼합 계수와 같아집니다.&lt;br /&gt;
위의 설명들을 통해 우리는 잠재변수 $z$가 독립적임을 알 수 있고, $p(\boldsymbol{z})$를 다음과 같이 표현할 수 있습니다.&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;$$p(\boldsymbol{z})=p(z_{1}=1)^{z_{1}}p(z_{2}=1)^{z_{2}}\cdots{p}(z_{K}=1)^{z_{K}}=\prod_{k=1}^K \pi_{k}^{z_{k}}\tag{6}$$&lt;/p&gt;

&lt;p&gt;$p(\boldsymbol{z})$를 모델링했으니, 이를 통해 우리에게 주어진 데이터가 $k$라는 가우시안 함수에서 관측될 확률을 모델링할 수 있습니다. 모델링된 확률은 다음과 같습니다.&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;$$p(\boldsymbol{x_{n}}|\boldsymbol{z})=\prod_{k=1}^K \mathcal{N}(\boldsymbol{x_{n}}|\mu_{k},\Sigma_{k})^{z_{k}}\tag{7}$$&lt;/p&gt;

&lt;p&gt;여기까지 제가 이해한 바로는, $p(\boldsymbol{z})$는 &quot;현재 우리 데이터가 이렇게 구성된 것 같은데...&quot; 하며 만든 모델이 되겠고, $p(\boldsymbol{x_{n}}|\boldsymbol{z})$는 &quot;그래? 그럼 그 모델을 실제 우리 데이터에 적용해서 잘 맞는지 확인해볼까?&quot; 하며 만든 모델이 되겠습니다.&lt;/p&gt;

&lt;p&gt;이제 우리가 최종적으로 구하려고 했던 GMM을 모델링할 조건이 만족되었습니다. 위의 식들과 식 (8) 이용하면 $p(\boldsymbol{X})$를 다음과 같이 나타낼 수 있습니다.&lt;/p&gt;
&lt;p&gt;(Bayes's Theorem) $p(X)=\sum_{Y} p(X,Y), \quad p(X,Y)=P(X|Y)P(Y)\tag{8}$&lt;/p&gt;
&lt;p&gt;$$p(\boldsymbol{X})=\prod_{n=1}^N p(\boldsymbol{x}_{n})=\prod_{n=1}^N \sum_{k=1}^K p(\boldsymbol{x}_{n},\boldsymbol{z})\qquad\qquad\qquad\qquad\qquad$$&lt;/p&gt;
&lt;p&gt;$$=\prod_{n=1}^N \sum_{k=1}^K p(\boldsymbol{x}_{n}|\boldsymbol{z})p(\boldsymbol{z})=\prod_{n=1}^N \sum_{k=1}^K \pi_{k}\mathcal{N}(\boldsymbol{x}_{n}|\mu_{k},\Sigma_{k})\tag{9}$$&lt;/p&gt;
&lt;p&gt;이 식의 양변의 로그를 취해주면,&lt;/p&gt;
&lt;p&gt;$$\log{p(\boldsymbol{X})}=\sum_{n=1}^N \log \sum_{k=1}^K \pi_{k}\mathcal{N}(\boldsymbol{x}_{n}|\mu_{k},\Sigma_{k})\tag{10}$$&lt;/p&gt;

&lt;p&gt;이제 (10)의 식을 미분해주면 매개변수를 최적화시킬 수 있지만, 식에 $\log$가 있기 때문에 미분하기에는 매우 까다롭습니다. 따라서 매개변수를 최적화시키기 위해서는 &lt;strong&gt;반복법(Iterative Method)&lt;/strong&gt;를 적용하여 반복적인 매개변수 업데이트를 통해 최적화해야합니다. 이 때 사용되는 알고리즘을 &lt;strong&gt;기댓값 최대화 알고리즘(Expectation-Maximization Algorithm, EM Algorithm)&lt;/strong&gt;이라고 합니다. 다음 포스팅에서는 이 EM 알고리즘에 대해서 이야기하고, 이를 통해 GMM의 최적화된 매개변수를 구하는 과정을 설명하겠습니다.&lt;/p&gt;

&lt;h5 id=&quot;출처&quot;&gt;출처:&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://datacookbook.kr/54&quot;&gt;DATA COOKBOOK&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://towardsdatascience.com/gaussian-mixture-models-explained-6986aaf5a95&quot;&gt;TOWARDS DATASCIENCE&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.wikipedia.org/&quot;&gt;Wikipedia&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 26 Dec 2020 00:00:00 +0900</pubDate>
        <link>https://jiwonkkim.github.io/probability%20and%20statistics/2020/12/26/pas_gmm/</link>
        <guid isPermaLink="true">https://jiwonkkim.github.io/probability%20and%20statistics/2020/12/26/pas_gmm/</guid>
        
        <category>Probability And Statistics</category>
        
        <category>Machine Learning</category>
        
        <category>GMM</category>
        
        <category>Gaussian</category>
        
        <category>EM</category>
        
        <category>EM Algorithm</category>
        
        <category>확률과 통계</category>
        
        <category>가우시안</category>
        
        <category>가우시안 혼합 모델</category>
        
        
        <category>Probability And Statistics</category>
        
      </item>
    
      <item>
        <title>01. 선형대수(Linear Algebra) 기초 (1)</title>
        <description>&lt;p&gt;&lt;br /&gt;&lt;br /&gt;
&lt;strong&gt;이 글을 읽기 전에&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;해당 포스팅은 Gilbert Strang 교수님의 Linear Algebra and Learning from Data-Wellesley-Cambridge Press (2019), 그리고 &lt;a href=&quot;https://ocw.mit.edu/courses/mathematics/18-065-matrix-methods-in-data-analysis-signal-processing-and-machine-learning-spring-2018/&quot;&gt;Gilbert Strang 교수님의 MIT OPEN COURSE 강의&lt;/a&gt;를 정리/각색하였습니다.&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;해당 포스팅은 개인적으로 공부한 내용을 정리한 것으로, 일부 내용에 오류가 있을 수 있습니다.&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;포스팅에 오류가 있을 시, 댓글로 남겨주시면 감사하겠습니다.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;선형대수는 기계학습을 포함한 다양한 분야에서 사용되고 있으나, 구체적으로 어떻게 사용되는지 잘 모르시는 분들이 많을거라고 생각됩니다. 저 또한 학부생때 선형대수 수업을 들었으나, 그냥 단순히 고윳값을 계산한다던지 등의 계산 위주의 공부를 했었습니다. 앞으로의 포스팅에선 선형대수가 어떤 의미를 가지고, 어떻게 사용되는지에 중점을 맞추고자 합니다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;간단한 간렬의 곱셈부터 짚고 넘어가겠습니다.&lt;br /&gt;
$A$라는 행렬과 $\boldsymbol{x}$라는 벡터를 곱해보겠습니다.&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;$$
A\boldsymbol{x}
=
\begin{bmatrix}
2 &amp;amp; 1 &amp;amp; 3 \\
3 &amp;amp; 1 &amp;amp; 4 \\
5 &amp;amp; 7 &amp;amp; 12
\end{bmatrix}
\begin{bmatrix}
x_{1} \\
x_{2} \\
x_{3}
\end{bmatrix}
=
\begin{bmatrix}
2x_{1}+ x_{2} + 3x_{3} \\
3x_{1}+ x_{2} + 4x_{3}\\
5x_{1}+7x_{2} +12x_{3}
\end{bmatrix}
\tag{1}$$&lt;/p&gt;

&lt;p&gt;$$
A\boldsymbol{x}
=
\begin{bmatrix}
2 &amp;amp; 1 &amp;amp; 3 \\
3 &amp;amp; 1 &amp;amp; 4 \\
5 &amp;amp; 7 &amp;amp; 12
\end{bmatrix}
\begin{bmatrix}
x_{1} \\
x_{2} \\
x_{3}
\end{bmatrix}
=
x_{1}
\begin{bmatrix}
2 \\ 3 \\ 5
\end{bmatrix}
+
x_{2}
\begin{bmatrix}
1 \\ 1 \\ 7
\end{bmatrix}
+
x_{3}
\begin{bmatrix}
3 \\ 4 \\ 12
\end{bmatrix}
\tag{2}$$&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
단순히 계산적으로만 본다면, $A\boldsymbol{x}$는 (1)과 (2)로 표현할 수 있다는 것입니다. 하지만 $A$와 $\boldsymbol{x}$의 곱을 선형대수적으로 보면 $A\boldsymbol{x}$는 $\boldsymbol{a_{1}}$과 $\boldsymbol{a_{2}}$의 &lt;strong&gt;선형 결합(Linear Combination)&lt;/strong&gt;인 것입니다. 이것이 선형대수의 기본적인 연산입니다. 즉, $A\boldsymbol{x}$는 $A$의 열 벡터들의 선형 결합입니다. 강의 중에서 교수님이 행렬을 각 요소별로만 생각하려하지 말고, 행렬 그 자체를 보라고 하셨는데, 이런 측면에서 말씀하시는거 같네요. (여전히 감은 오지 않습니다.)&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이어서 $A$의 &lt;strong&gt;열 공간(Column Space)&lt;/strong&gt;에 대해서 다뤄보겠습니다. 어떤 행렬의 열 공간이란, 그 행렬의 열 벡터들의 선형 결합으로 만들 수 있는 모든 집합을 의미합니다. &lt;strong&gt;즉, $A$의 열 공간이란, 모든 벡터 $\boldsymbol{x}$에 대하여 $A\boldsymbol{x}$가 만들어낼 수 있는 공간을 의미합니다.&lt;/strong&gt; 기호로는 $C(A)$로 표현합니다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;$\boldsymbol{a_{n}}$을 행렬 $A$의 n번째 열 벡터라고 합시다. 그럼 $A\boldsymbol{x}=x_{1}\boldsymbol{a_{1}}+x_{2}\boldsymbol{a_{2}}+x_{3}\boldsymbol{a_{3}}$의 모든 조합, 즉 $A$의 열 공간은 3차원 공간에서 어떤 부분을 만들어 낼까요? 정답은 평면입니다. 벡터 $\boldsymbol{x}$가 3차원인데, 왜 2차원인 평면을 만들어낼까요? 그 이유는 $\boldsymbol{a_{3}}$가 $\boldsymbol{a_{1}}$과 $\boldsymbol{a_{2}}$의 합으로 나타낼 수 있기 때문입니다. 따라서 $A$의 열 공간은 평면입니다. 행렬 $A$에 따라 $C(A)$는 3차원 공간도 되고, 1차원 직선도 되고, 점도 될 수 있습니다. $\boldsymbol{a_{3}}$는 $\boldsymbol{a_{1}}$와 $\boldsymbol{a_{2}}$의 합으로 구성될 수 있기 때문에 &lt;strong&gt;선형종속(Linearly Dependent)&lt;/strong&gt;이며, $\boldsymbol{a_{1}}$과 $\boldsymbol{a_{2}}$는 행렬 $A$의 다른 열 벡터들의 조합으로 구성할 수 없으므로 &lt;strong&gt;선형독립(Linearly Independent)&lt;/strong&gt;입니다. 그리고 &lt;strong&gt;기저(Basis)&lt;/strong&gt;란, 그 벡터공간을 선형생성하는 선형독립인 벡터들을 의미하는데, 따라서 행렬 $A$의 기저는 $\boldsymbol{a_{1}}$과 $\boldsymbol{a_{2}}$가 됩니다. 그리고 행렬의 &lt;strong&gt;계수(Rank)&lt;/strong&gt;는 어떤 행렬의 독립적인 열의 개수, 즉 행렬의 기저의 개수가 되므로 $rank(A)=2$가 됩니다. 행렬 $A$의 열 공간은 행렬 $A$의 랭크에 해당하는 차원의 공간을 만들 수 있습니다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;열 공간이 있으니 당연히 &lt;strong&gt;행 공간(Row Space)&lt;/strong&gt;도 존재합니다. 열 공간과 마찬가지로 어떤 행렬의 행 공간이란, 그 행렬의 행 벡터들의 선형 결합으로 만들 수 있는 모든 집합을 의미합니다. 열 공간과 행 공간은 분명 다른 공간이지만, 일반적으로 행렬의 열 벡터를 중점적으로 다루기 때문에 행 공간에 대한 표기를 $C(A^T)$라고 합니다. (행렬 $A$의 행 공간은 행렬 $A$의 전치행렬 $A^T$의 열 공간과 같기 때문이고, MATLAB이나 Python 등에서 표현하는 벡터는 보통 열 벡터를 의미합니다.)&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;예제에서 우리는 $\boldsymbol{a_{3}}$가 $\boldsymbol{a_{1}}$과 $\boldsymbol{a_{2}}$의 합으로 나타내짐을 우연히 알았습니다. 하지만 행 공간의 기저를 알아내는 것은 쉽지 않아보입니다. 따라서 열 공간의 기저를 통해 행 공간의 기저를 구해보도록 하겠습니다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;$$
A\boldsymbol{x}
=
CR
=
\begin{bmatrix}
2 &amp;amp; 1 &amp;amp; 3 \\
3 &amp;amp; 1 &amp;amp; 4 \\
5 &amp;amp; 7 &amp;amp; 12
\end{bmatrix}
=
\begin{bmatrix}
2 &amp;amp; 1 \\
3 &amp;amp; 1 \\
5 &amp;amp; 7 
\end{bmatrix}
\begin{bmatrix}
1 &amp;amp; 0 &amp;amp; 1 \\
0 &amp;amp; 1 &amp;amp; 1
\end{bmatrix}
\tag{3}
$$&lt;/p&gt;

&lt;p&gt;여기서 $C$와 $R$은 각각 $A$의 열 공간 기저와 행 공간 기저를 의미합니다. 앞서 구해놓은 $C$를 통해 (3)처럼 행 공간 기저 $R$을 구할 수 있습니다. 그렇다면 이렇게 구한 $R$이 실제로 행 공간 기저가 될 수 있을까요?&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;$\boldsymbol{b_{n}}$을 행렬 $A$의 n번째 행 벡터, $\boldsymbol{r_{n}}$을 $R$의 행 벡터라고 합시다. $R$로 $A$의 첫번째 행 성분을 표현 하려면 어떻게 해야할까요? $\boldsymbol{b_{1}}=2\boldsymbol{r_{1}}+\boldsymbol{r_{2}}$로 표현할 수 있습니다. 여기서 $\boldsymbol{b_{1}}$의 계수가 된 (2,1)은 어떻게 찾았을까요? 답은 간단합니다. $C$의 첫 번째 행 벡터에서 찾을 수 있었습니다. $A$의 나머지 행 벡터들도 똑같은 방식으로 구할 수 있습니다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;즉, 우리는 $A=CR$을 두 가지 표현으로 생각할 수 있습니다.&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;$A$의 열 벡터들을 만들어내기 위한 $C$의 열 벡터들의 조합&lt;/li&gt;
  &lt;li&gt;$A$의 행 벡터들을 만들어내기 위한 $R$의 행 벡터들의 조합&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;이 행렬의 인수분해 $A=CR$은 중요한 아이디어입니다. 위에서 행렬의 랭크는 행렬의 독립적인 열의 개수라고 정의했습니다. 하지만 $A=CR$을 통해서 &lt;strong&gt;행렬 $A$의 독립적인 열 벡터 개수는 행렬 $A$의 독립적인 행 벡터 개수와 동일&lt;/strong&gt;함을 알 수 있습니다. 따라서 랭크는 행렬의 독립적인 행의 개수라고도 정의할 수 있습니다. &lt;strong&gt;즉, 행렬의 랭크는 행렬이 나타낼 수 있는 벡터 공간에서 기저의 개수를 의미하고, 이 기저는 서로 독립인 행 또는 열의 벡터의 개수에 의해서 결정됩니다.&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;만약에 우리가 $10^5$크기의 행렬을 데이터로 사용한다고 가정해봅시다. 이 데이터를 모두 사용하기엔 부담이 적지 않기 때문에, 이 데이터를 무작위로 추출할 수 있도록 랜덤 샘플링을 합니다. 랜덤 샘플링을 위해 $A$를 ${10^5}\times{10^5}$크기의 데이터 행렬, $\boldsymbol{x}$를 ${10^5}\times{1}$의 랜덤 벡터라고 둡시다. 그러면 $A\boldsymbol{x}$를 데이터 행렬 $A$에서 하나의 데이터를 랜덤 샘플링하는 것으로 볼 수 있습니다. 어디서 많이 보던 수식입니다. 이것은 $A\boldsymbol{x}$의 열 공간입니다. &lt;strong&gt;즉, 데이터 $A$를 무작위 샘플링하면 이것은 $A$의 열 공간이 되므로, $A$의 대략적인 열 공간을 볼 수 있다는 생각입니다.&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그렇다면, $ABC\boldsymbol{x}$는 $A$의 열 공간에 있는걸까요? 정답은 ‘그렇다’ 입니다. $A(BC\boldsymbol{x})$와 같이 $A$에 무언가를 곱한 형태가 되기 때문이죠. 이렇게 괄호를 어디에 두느냐가 선형대수의 핵심입니다.&lt;br /&gt;
$A=CR$을 다시 봅시다. $C$는 그대로 $A$의 열 공간이라고 가정하고, $R$을 $A$의 행 벡터 일부라고 두면, 등호가 성립하지 않을 것입니다. 이 등호가 성립하기 위해서는 중간에 어떤 행렬 ${2}\times{2}$크기의 행렬 $U$가 필요할 것입니다. 즉, $A=CUR^{\prime}$이 되는거죠. 이 $CUR^{\prime}$이 매우 중요한 역할을 한다고 합니다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;교수님은 기존의 행렬 곱 대신, 위에서 언급된 $A=CUR^{\prime}$같은 방식으로 새로운 행렬 곱 시스템을 생각하고 계신 것 같습니다. 이에 대한 자세한 내용은 이후의 수업에서 알려주실것 같네요.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이번 포스팅은 여기까지이며, 다음 포스팅에선 행렬의 곱셈과 인수분해에 대해서 다루겠습니다.&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;이번-포스팅-정리&quot;&gt;이번 포스팅 정리&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;기저란, 벡터공간을 선형생성하는 선형독립인 벡터들을 의미한다.&lt;/li&gt;
  &lt;li&gt;행렬의 곱셉은 행렬의 기저들을 통해 표현할 수 있다.&lt;/li&gt;
  &lt;li&gt;열 공간이란, 그 행렬의 열 벡터들의 선형 결합으로 만들 수 있는 모든 집합을 의미한다.&lt;/li&gt;
  &lt;li&gt;어떤 행렬에서 열 공간의 기저 개수와 행 공간의 기저 개수는 같다.&lt;/li&gt;
  &lt;li&gt;랭크란, 행렬이 나타낼 수 있는 벡터 공간에서 기저의 개수를 의미한다.&lt;/li&gt;
  &lt;li&gt;새로운 행렬 곱의 패러다임..?&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;출처&quot;&gt;출처:&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://ocw.mit.edu/courses/mathematics/18-065-matrix-methods-in-data-analysis-signal-processing-and-machine-learning-spring-2018/&quot;&gt;Gilbert Strang 교수님의 MIT OPEN COURSE 강의&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 23 Dec 2020 00:00:00 +0900</pubDate>
        <link>https://jiwonkkim.github.io/linear%20algebra/2020/12/23/la_introduction_01/</link>
        <guid isPermaLink="true">https://jiwonkkim.github.io/linear%20algebra/2020/12/23/la_introduction_01/</guid>
        
        <category>Linear Algebra</category>
        
        <category>Machine Learning</category>
        
        <category>Andrew Ng</category>
        
        <category>Supervised learning</category>
        
        <category>Unsupervised Learning</category>
        
        <category>머신러닝</category>
        
        <category>기계학습</category>
        
        <category>지도학습</category>
        
        <category>비지도학습</category>
        
        
        <category>Linear Algebra</category>
        
      </item>
    
      <item>
        <title>기계학습(Machine learning) 기초 (1)</title>
        <description>&lt;p&gt;&lt;br /&gt;&lt;br /&gt;
&lt;strong&gt;이 글을 읽기 전에&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;해당 포스팅은 Coursera에 올라와 있는 Andrew Ng 교수님의 Machine Learning 강좌를 정리/각색하였습니다.&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;해당 포스팅은 개인적으로 공부한 내용을 정리한 것으로, 일부 내용에 오류가 있을 수 있습니다.&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;포스팅에 오류가 있을 시, 댓글로 남겨주시면 감사하겠습니다.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;Machine learning is the science of getting computers to learn, without being explicitly programmed.&lt;br /&gt;
기계학습은 컴퓨터가 명시적으로 프로그래밍 되지 않아도, 배울 수 있도록 하는 과학입니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;
기계학습은 최신 분야이다보니, 전문가들 사이에서도 무엇이 기계학습이고 무엇이 기계학습이 아닌가에 대한 논의가 여전히 이루어지고 있습니다. 그럼에도 불구하고 전문가들 사이에서 공통적으로 기계학습에 대하여 정의하는 것은 기계가 데이터를 통해 스스로 학습한다는 것입니다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;스스로 학습한다는 거창한 말을 쓰지만, 사실 우리가 얻고자 하는 결과에 통계적으로 가장 유사한 값을 뽑아내기 위한 과정입니다. 예를 들어, 0부터 9까지의 손글씨 이미지를 구분해내는 충분히 학습된 기계에 0이 써져있는 손글씨 이미지를 입력으로 넣으면, 이 기계는 입력으로 들어온 이미지가 무조건 0입니다! 하고 직접적으로 분류해내는 것이 아닌, 0일 확률이 95%정도 되니까 이 이미지를 0이라고 예측할게요! 가 되는 것입니다. (기계 학습에 100%란 없으며, 모든 결과는 기계가 예측한 결과입니다.)&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;기계학습을 통해 연구되고 있는 분야 중 대표적인 것은 이미지 내에 어떤 물체가 있는지 등의 이미지 관련 태스크를 처리하는 컴퓨터 비전 (Computer Vision), 기계가 인간의 언어를 이해하고 이를 통해 언어간의 번역을 돕는 등의 언어 관련 태스크를 처리하는 자연어 처리 (Natural Language Processing, NLP) 등이 있습니다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;기계학습에는 여러가지 종류가 있지만, 이번 장에서는 크게 두가지로 나누어 보겠습니다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;지도학습 (Supervised Learning)&lt;/li&gt;
  &lt;li&gt;비지도학습 (Unsupervised Learning)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
먼저 지도학습이란, 가장 일반적인 유형의 기계 학습입니다.&lt;br /&gt;&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;/assets/ml/01_introduction/Fig01_HousingPrice.png&quot; width=&quot;600&quot; height=&quot;300&quot; /&gt;&lt;/center&gt;
&lt;center&gt;Fig. 1. Housing Price Prediction&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;
대표적인 지도학습 문제입니다. Fig. 1 을 보시면, 가로축은 집의 넓이, 세로축은 집값입니다. 이 데이터를 통해 알 수 있는 것은, 집의 넓이에 비례하여 집값이 올라간다는 것입니다. 따라서, 집의 넓이를 알면 집값 또한 예측이 가능할 수 있습니다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그렇다면, $750feet^2$ 의 집의 값은 얼마일지 예상해볼까요?&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;가장 간단한 방법 중 하나는, 데이터를 통과하는 직선을 하나 그리는 것입니다. 직선 하나를 데이터에 맞추는거죠. Fig. 1 에 그려진 분홍색 직선에 의하면, 집은 15만 달러로 책정될 수 있을 것이라고 예측할 수 있습니다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;또 다른 방법은, 직선이 아닌 곡선 형태로 데이터를 통과하는 선을 그리는 것입니다. Fig. 1 에 그려진 파란색 곡선에 의하면, 집의 가격은 20만 달러로 책정될 수 있을 것이라고 예측할 수 있습니다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이것들은 지도학습 알고리즘의 예입니다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;즉, 지도학습이란, 우리가 알고리즘에게 데이터의 집합을 주는데, 각 데이터에 ‘정답’이 포함되어 있는 것입니다. 위의 문제를 예로 들면, 집의 값을 예측하기 위하여 집값에 영향을 주는 정보인 집의 넓이와, 그 집이 매매된 실제 집값, 즉 ‘정답’을 알고리즘에게 전달할 데이터의 집합에 포함시킨 것입니다. 이 문제는 &lt;strong&gt;회귀 문제(Regression Problem)&lt;/strong&gt;이라고도 합니다. 회귀 문제라고 함은 연속된 값을 가진 결과를 예측하는 것입니다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;또 다른 문제를 예로 들어보겠습니다.&lt;br /&gt;&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;/assets/ml/01_introduction/Fig02_BreastCancer.png&quot; width=&quot;600&quot; height=&quot;300&quot; /&gt;&lt;/center&gt;
&lt;center&gt;Fig. 2. Breast Cancer Prediction&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;
Fig. 2 는 종양의 크기에 따라 유방암이 악성인지 양성인지를 표현한 데이터입니다. 악성이면 빨간색(1,Y), 양성이면 파란색(0,N)로 표현했습니다. 기계학습은 해당 데이터를 학습하여 어떤 종양 크기가 주어지면, 그 종양이 악성인지 양성인지 예측할 수 있습니다. 이 문제는 &lt;strong&gt;분류 문제(Classification Problem)&lt;/strong&gt;의 예시 중 하나입니다. 분류의 경우, 회귀와 달리 불연속적인 결과값을 예측합니다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;예시로 든 문제들은 모두 &lt;strong&gt;한 가지&lt;/strong&gt;의 &lt;strong&gt;특성(Feature)&lt;/strong&gt;, 또는 &lt;strong&gt;속성(Attribute)&lt;/strong&gt;만 사용했습니다. 즉, 집값 예측 문제에서는 집의 넓이라는 특성을, 종양 예측 문제에서는 종양의 크기라는 특성을 사용한 것입니다. 실제 기계학습 문제에서는 한 개 이상의 특성이 주어질 것입니다. 종양 문제를 예로 들면 악성/양성의 판단 여부는 환자의 나이, 성별, 종양의 두께 등도 영향을 줄 수 있겠습니다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;특성이 많아야 알고리즘이 결과를 예측할 때 도움이 되겠지만, 이러한 특성을 모두 저장하기엔 컴퓨터의 메모리에 한계가 있습니다. 후에 포스팅하게 될 Support Vector Machine(SVM)을 사용하면 무한개의 특성을 가진 데이터를 다룰 수 있게 되지만, 여기서는 일단 넘어가도록 하겠습니다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이번 포스팅은 여기서 마치도록 하며, 다음 포스팅에서는 비지도 학습에 대해서 이야기하도록 하겠습니다.&lt;/p&gt;

&lt;h5 id=&quot;출처&quot;&gt;출처:&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.coursera.org/learn/machine-learning&quot;&gt;Andrew Ng - Machine Learning&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 23 Dec 2020 00:00:00 +0900</pubDate>
        <link>https://jiwonkkim.github.io/machine%20learning/2020/12/23/ml_introduction_01/</link>
        <guid isPermaLink="true">https://jiwonkkim.github.io/machine%20learning/2020/12/23/ml_introduction_01/</guid>
        
        <category>Machine Learning</category>
        
        <category>Andrew Ng</category>
        
        <category>Supervised Learning</category>
        
        <category>Unsupervised Learning</category>
        
        <category>머신러닝</category>
        
        <category>기계학습</category>
        
        <category>지도학습</category>
        
        <category>비지도학습</category>
        
        
        <category>Machine Learning</category>
        
      </item>
    
      <item>
        <title>Welcome to my Blog</title>
        <description>&lt;h2 id=&quot;이-블로그에-대하여&quot;&gt;이 블로그에 대하여&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;
이 블로그는 개인정인 공부를 정리하기 위하여 만들었습니다. 저는 전자공학부를 졸업하여 디지털 회로 설계 일을 하였으나, 음성 신호를 다루는 일에 흥미가 생겨 회사를 그만두고, 융합 기술 석사 과정을 진행중입니다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;기존에 일하던 분야와 전혀 관계 없는 분야를 전공하게 되어서 그런지 여러모로 제가 부족함을 많이 느꼈습니다. 이에 제가 공부해야겠다고 생각했던 것들을 정리하여 올리는 블로그를 만들었습니다. (사실 블로그는 여러번 만들었으나, 금방 귀찮아져서 그만둔 적이 많음)&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;제가 주로 포스팅할 주제들은 다음과 같습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;수학 관련 (선형 대수, 통계 등)&lt;/li&gt;
  &lt;li&gt;Machine Learning 관련 (Andrew Ng의 강의 정리 등)&lt;/li&gt;
  &lt;li&gt;Digital Signal Processing 관련 (Julius O. Smith 교수님의 DSP 내용 중, 중요한 것 혹은 제가 잘 모르고 있던 것)&lt;/li&gt;
  &lt;li&gt;코딩 테스트용 Algorithm 문제 (백준, 삼성 S/W Academy 문제 및 관련 Algorithm)&lt;/li&gt;
  &lt;li&gt;Audio 관련 논문 리뷰&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;html같은 문법을 전혀 모르다 보니, Git 블로그를 만들기 꺼려졌는데, 어떻게든 만들어보게 되었습니다.&lt;br /&gt;
여전히 포스팅 할 때 알아야 할 문법들이 많지만, 그래도 열심히 공부해보겠습니다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이번에는 제가 오랫동안 포스팅 하기를 간절히 빕니다…&lt;/p&gt;
</description>
        <pubDate>Tue, 22 Dec 2020 00:00:00 +0900</pubDate>
        <link>https://jiwonkkim.github.io/graffiti/2020/12/22/welcome-to-my-blog/</link>
        <guid isPermaLink="true">https://jiwonkkim.github.io/graffiti/2020/12/22/welcome-to-my-blog/</guid>
        
        <category>Git</category>
        
        <category>Blog</category>
        
        
        <category>Graffiti</category>
        
      </item>
    
  </channel>
</rss>